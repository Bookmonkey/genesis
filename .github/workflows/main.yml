# .github/workflows/main.yml

name: Build things
# automated build on Commit
# Manual trigger for build and release
# Make one for just building and have a separate one that builds and releases
# Find out endpoint to deploy to (server, path)
# https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions

on:
  push:
    branches:
      - staging
      - production
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

jobs:    
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout files and setup environment
      uses: actions/checkout@v2
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '10.15.3'
    - name: Build plugins
      run: composer update
    - name: Build assets
      run: yarn && yarn production
    - name: Upload PHP
      uses: actions/upload-artifact@v2
      with:
        name: php-build
        path: vendor
    - if: success()
      name: Send build success message
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Git message
        SLACK_MESSAGE: The build process succeeded
    - if: failure()
      name: Send build fail message
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Git message
        SLACK_MESSAGE: The build process failed
        SLACK_COLOR: '#BE2625'
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Prepare for deployment
      uses: actions/checkout@v2
    - name: Download PHP
      uses: actions/download-artifact@v2
      with:
        name: php-build
        path: vendor
        
    - name: Deploy staging
      if: github.ref == 'refs/heads/staging'
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        ftp-server: ${{ secrets.FTP_HOST }}/httpdocs
        ftp-username: ${{ secrets.FTP_USERNAME }}
        ftp-password: ${{ secrets.FTP_PASSWORD }}
        args: --only-newer --ignore-time --verbose
        
    - name: Deploy production
      if: github.ref == 'refs/heads/production'
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        ftp-server: ${{ secrets.FTP_HOST }}/httpdocs
        ftp-username: ${{ secrets.FTP_USERNAME }}
        ftp-password: ${{ secrets.FTP_PASSWORD }}
        args: --only-newer --ignore-time --verbose
